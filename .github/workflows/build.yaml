name: Application Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  go_version: "1.21"
  IMAGE_NAME: go-automate-db
jobs:
  app_test:
    runs-on: ubuntu-latest
    name: Application Test
    services:
      postgres:
        image: postgres:12.15
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: admin
          POSTGRES_USER: admin
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.go_version }}
      - name: Go Build
        run: go build -v ./...
      - name: Go Test
        run: go test -v ./...
  app_security:
    name: Application Security Check
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: '-no-fail -fmt sarif -out results.sarif ./...'
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif

  app_build:
    name: Application Build
    needs:
      - app_test
      - app_security
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.go_version }}
      - name: Go Build
        run: go build -o go-automate-db
      - name: Build Docker image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"


